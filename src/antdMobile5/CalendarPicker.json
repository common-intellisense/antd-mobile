{
  "name": "CalendarPicker",
  "props": {
    "visible": {
      "description": "To show or hide the Cclendar",
      "description_zh": "显示或隐藏 Cclendar",
      "default": "true",
      "value": "",
      "type": "boolean"
    },
    "confirmText": {
      "description": "The text of confirm button",
      "description_zh": "确认按钮的文本",
      "default": "Confirm",
      "value": "",
      "type": "string"
    },
    "popupClassName": {
      "description": "The custom class name of the popup",
      "description_zh": "弹出窗口的自定义类名",
      "default": "-",
      "value": "",
      "type": "string"
    },
    "popupStyle": {
      "description": "The custom style of the popup",
      "description_zh": "弹出窗口的自定义样式",
      "default": "-",
      "value": "",
      "type": "React.CSSProperties"
    },
    "popupBodyStyle": {
      "description": "The custom style of the popup body",
      "description_zh": "弹出正文的自定义样式",
      "default": "-",
      "value": "",
      "type": "React.CSSProperties"
    },
    "forceRender": {
      "description": "Render content forcely，When ref is passed，always be true",
      "description_zh": "强行渲染内容，当 ref 被传递时，始终为 true",
      "default": "false",
      "value": "",
      "type": "boolean"
    },
    "closeOnMaskClick": {
      "description": "Whether to close after clicking the mask layer",
      "description_zh": "单击蒙版图层后是否关闭",
      "default": "true",
      "value": "",
      "type": "boolean"
    },
    "getContainer": {
      "description": "To get the specified mounted HTML node, the default is body, if null returned, it would be rendered to the current node",
      "description_zh": "要获取指定的挂载 HTML 节点，默认为 body，如果返回 null，则将其呈现到当前节点",
      "default": "() => document.body",
      "value": "",
      "type": "HTMLElement | () => HTMLElement | null"
    },
    "allowClear": {
      "description": "Whether to allow clearing after another click.",
      "description_zh": "是否允许在再次单击后清除。",
      "default": "true",
      "value": "",
      "type": "boolean"
    },
    "defaultValue": {
      "description": "The default selected date or date range.",
      "description_zh": "默认选择的日期或日期范围。",
      "default": "-",
      "value": "",
      "type": "Same as value prop."
    },
    "max": {
      "description": "Maximum value of a selectable range.",
      "description_zh": "可选范围的最大值。",
      "default": "-",
      "value": "",
      "type": "Date"
    },
    "min": {
      "description": "Minimum value of a selectable range.",
      "description_zh": "可选范围的最小值。",
      "default": "-",
      "value": "",
      "type": "Date"
    },
    "renderTop": {
      "description": "The top information of date render function.",
      "description_zh": "日期渲染函数的顶部信息。",
      "default": "-",
      "value": "",
      "type": "(date: Date) => ReactNode | null | undefined"
    },
    "renderBottom": {
      "description": "The bottom information of date render function.",
      "description_zh": "日期渲染函数的底部信息。",
      "default": "-",
      "value": "",
      "type": "(date: Date) => ReactNode | null | undefined"
    },
    "selectionMode": {
      "description": "The selection mode. Disable selection when this prop is not set.",
      "description_zh": "选择模式。未设置此道具时禁用选择。",
      "default": "-",
      "value": "",
      "type": "single / range"
    },
    "shouldDisableDate": {
      "description": "Set whether the date is disable selection. The min and max Settings are ignored",
      "description_zh": "设置日期是否禁用选择。最小和最大设置将被忽略",
      "default": "-",
      "value": "",
      "type": "(date: Date) => boolean"
    },
    "title": {
      "description": "The title of calendar",
      "description_zh": "日历的标题",
      "default": "Date selection",
      "value": "",
      "type": "React.ReactNode"
    },
    "value": {
      "description": "The selected date or date range.",
      "description_zh": "所选日期或日期范围。",
      "default": "-",
      "value": "",
      "type": "Date | null when selection mode is \"single\". [Date, Date] | null when selection mode is \"range\""
    },
    "weekStartsOn": {
      "description": "Week starts on which day.",
      "description_zh": "一周从哪一天开始。",
      "default": "Sunday",
      "value": "",
      "type": "Monday / Sunday"
    },
    "renderDate": {
      "description": "Custom date rendering.",
      "description_zh": "自定义日期呈现。",
      "default": "-",
      "value": "",
      "type": "(date: Date) => ReactNode"
    }
  },
  "link": "https://mobile.ant.design/components/calendar-picker/calendar-picker",
  "link_zh": "https://mobile.ant.design/components/calendar-picker/calendar-picker",
  "typeDetail": {},
  "events": [
    {
      "name": "onClose",
      "description": "Triggered when closed",
      "description_zh": "关闭时触发",
      "params": "() => void",
      "value": ""
    },
    {
      "name": "onMaskClick",
      "description": "Triggered when the mask is clicked",
      "description_zh": "单击蒙版时触发",
      "params": "() => void",
      "value": ""
    },
    {
      "name": "onChange",
      "description": "Trigger when selected date changes.",
      "description_zh": "在所选日期更改时触发。",
      "params": "(val: Date | null) => void when selection mode is \"single\". (val: [Date, Date] | null) => void when selection mode is \"range\".",
      "value": ""
    },
    {
      "name": "onConfirm",
      "description": "Trigger when confirm button is clicked.",
      "description_zh": "单击确认按钮时触发。",
      "params": "(val: Date | null) => void when selection mode is \"single\"，(val: [Date, Date] | null) => void when selection mode is \"range\"",
      "value": ""
    }
  ],
  "methods": [
    {
      "name": "jumpTo",
      "description": "Jump to specified page",
      "description_zh": "跳转到指定页面",
      "params": "(page: Page | ((page: Page) => Page)) => void",
      "value": ""
    },
    {
      "name": "jumpToToday",
      "description": "Jump to today's page",
      "description_zh": "跳转到今天的页面",
      "params": "() => void",
      "value": ""
    },
    {
      "name": "getDateRange",
      "description": "get date",
      "description_zh": "获取日期",
      "params": "[Date, Date]",
      "value": ""
    }
  ],
  "slots": [],
  "suggestions": []
}
